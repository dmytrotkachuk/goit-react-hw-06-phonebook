{"version":3,"sources":["components/Contact.module.css","components/transitions.module.css","components/Filter.module.css","components/Appbar.module.css","components/ContactList.module.css","components/Layout.js","components/Appbar.js","redux/contacts/contactsActions.js","components/ContactForm.js","components/Contact.js","components/ContactList.js","components/Filter.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm.module.css"],"names":["module","exports","Layout","children","className","Appbar","styles","header","CSSTransition","in","appear","classNames","transitions","timeout","title","addContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","changeFilter","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","contactForm","onSubmit","htmlFor","contactFormItem","type","onChange","contactBtn","Component","mapDispatchToProps","contactsAction","connect","ownProps","item","contacts","items","find","dispatch","onRemove","contactsActions","contactData","button","onClick","normalizeFilter","filter","toLowerCase","includes","onRemoveContact","TransitionGroup","component","contactList","map","key","onChangeFilter","filterContainer","filterName","filterField","App","createReducer","action","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfad48f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__fuqV-\",\"button\":\"Contact_button__1_3n-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"transitions_appear__3JmJR\",\"appearActive\":\"transitions_appearActive__3Yc8C\",\"enter\":\"transitions_enter__Y__Sk\",\"enterActive\":\"transitions_enterActive__2z536\",\"exit\":\"transitions_exit__34Idt\",\"exitActive\":\"transitions_exitActive__3Ul1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2SLkC\",\"filterName\":\"Filter_filterName__JCnn_\",\"filterField\":\"Filter_filterField__3vmai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Appbar_title__1HZ7I\",\"header\":\"Appbar_header__2wDjy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2rPy5\",\"contact\":\"ContactList_contact__3dcib\",\"button\":\"ContactList_button__3iDcH\"};","import React from 'react';\nimport './Layout.css'\n\nconst Layout = ({children}) => <div className=\"Layout\"> {children}</div> ;\n\nexport default  Layout;","import React from 'react'\nimport styles from './Appbar.module.css'\nimport { CSSTransition} from 'react-transition-group'\nimport transitions from './transitions.module.css'\n// import Notification from '../Notification/Notification'\n\nconst Appbar = () => (\n    <header className={styles.header}>\n    <CSSTransition in={true} appear={true} classNames={transitions} timeout={500} >\n    <h1 className={styles.title}>Phonebook</h1>\n    </CSSTransition>\n    </header>\n)\n\nexport default Appbar;","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', (name,number) => ({\n    payload: {contact:{    \n        id:uuidv4(),\n        name,\n        number}\n    }}))\n\nconst removeContact = createAction('contacts/remove')\nconst changeFilter = createAction('contacts/filter')\n\nexport default { addContact, removeContact, changeFilter }\n\n\n//   isAlready = () =>{\n//     this.setState({notification:false})\n//   }","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport contactsAction from '../redux/contacts/contactsActions'\nimport styles from './ContactForm.module.css'\n\nclass ContactForm extends Component{\n\n    state={\n        name:'',\n        number:''\n    }\n\n\n    handleChange= e => {\n        const {name, value } = e.target\n            this.setState({[name]:value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const {name,number} = this.state\n        if (name && number){\n        this.props.onAddContact(name,number)\n        this.setState({name:'', number:''})\n        } \n    }\n\n    render(){\n        const {name, number} = this.state\n        return(\n            <>\n            \n            <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n            <label \n                htmlFor='name'\n                className={styles.contactFormItem}\n\n                >Name</label>\n            <input\n                className={styles.contactFormItem}\n                type='text'\n                id='name'\n                name='name'\n                value={name}\n                onChange={this.handleChange}\n                \n            />\n            <label \n                htmlFor='phone'\n                className={styles.contactFormItem}\n            >Phone</label>\n\n            <input\n            className={styles.contactFormItem}\n            type='text'\n            id='phone'\n            name='number'\n            value={number}\n            onChange={this.handleChange}\n            />\n\n            <button \n            className={styles.contactBtn}\n            >Add contact</button>\n\n            </form>\n            </>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = {\n    onAddContact: contactsAction.addContact\n}\n\nexport default connect(null,mapDispatchToProps)(ContactForm)","import React from 'react'\nimport styles from './Contact.module.css'\nimport {connect} from 'react-redux'\nimport contactsActions from '../redux/contacts/contactsActions'\n// import PropTypes from 'prop-types';\n\nconst Contact = ({name,number , onRemove}) => {\n    \n    return(\n    <li className={styles.contact}>\n    <p className={styles.contactData}>{name}</p>\n    <p className={styles.contactData}>{number}</p>\n    <button \n    className={styles.button} \n    onClick={onRemove}\n    >X</button>\n    </li>\n    \n    )}\n\nconst mapStateToProps = (state,ownProps) => {\n const item = state.contacts.items.find(item => item.id === ownProps.id)\n return {...item}\n};\n\n\nconst mapDispatchToProps = (dispatch, ownProps) =>({\n    onRemove: () => dispatch(contactsActions.removeContact(ownProps.id))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Contact);\n\n\n// Contact.propTypes = {\n//     contact: PropTypes.shape(PropTypes.string.isRequired) ,\n//     onRemove: PropTypes.func\n// }","import React from 'react'\nimport {connect} from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition , TransitionGroup} from 'react-transition-group'\n// import contactsActions from '../redux/contacts/contactsActions'\nimport Contact from './Contact'\nimport styles from './ContactList.module.css'\nimport transitions from './transitions.module.css'\n\nconst ContactList = ({contacts, onRemoveContact}) => {\n    return(\n    <TransitionGroup component='ul' className={styles.contactList}>\n   \n    {contacts.map(contact => \n        \n    <CSSTransition \n        classNames={transitions}\n        timeout={200}\n        key={uuidv4()}> \n        \n        <Contact id={contact.id}/>\n       \n    </CSSTransition> )}\n    \n    </TransitionGroup>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    const {items, filter} = state.contacts\n    const normalizeFilter = filter.toLowerCase();\n    const visibleContacts = items.filter(contact => contact.name.toLowerCase().includes(normalizeFilter)); \n    return ({ contacts: visibleContacts })\n}\n\n\n\nexport default connect(mapStateToProps)(ContactList);\n\n","import React from 'react'\nimport {connect} from 'react-redux';\nimport contactsActions from '../redux/contacts/contactsActions'\nimport styles from './Filter.module.css'\n\nconst Filter = ({value, onChangeFilter}) =>(\n    <div className={styles.filterContainer}>\n    <label className={styles.filterName} htmlFor='filter'>Find contacts by name</label>\n    <input\n    className={styles.filterField}\n    // type='text'\n    value={value}\n    onChange={e=> onChangeFilter(e.target.value)}\n    id='filter'/>\n    </div>\n)\n\nconst mapStateToProps = (state) =>({\n    value: state.contacts.filter\n})\n\nconst mapDispatchToProps = {\n    onChangeFilter: contactsActions.changeFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import React from 'react';\nimport Layout from './Layout'\nimport Appbar from './Appbar'\nimport ContactForm from './ContactForm'\nimport ContactList from './ContactList'\nimport Filter from './Filter'\n\nfunction App() {\n  return (\n    <Layout>\n      <Appbar/>\n      <ContactForm/>\n      <Filter/>\n      <ContactList/>\n    </Layout>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux'\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contactsActions'\n\nconst addContact = (state, action) => {\n    return [...state, action.payload.contact]\n};\nconst removeContact = (state, action) =>{ \n   return  state.filter(contact => contact.id !== action.payload)\n};\n\nconst items = createReducer([],{\n    [contactsActions.addContact]: addContact,\n    [contactsActions.removeContact]: removeContact,\n})\n\nconst filter = createReducer('',{\n    [contactsActions.changeFilter]: (state, action) =>  action.payload\n})\n\n\nexport default combineReducers({\n    items,\n    filter\n})\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contactsReducer'\n\nconst store = configureStore({\n    reducer: {\n        contacts:contactsReducer\n    }\n})\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './components/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2uDV0\",\"contactFormItem\":\"ContactForm_contactFormItem__2_-x5\",\"contactBtn\":\"ContactForm_contactBtn__TZbmC\"};"],"sourceRoot":""}